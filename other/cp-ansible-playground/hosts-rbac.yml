all:
  vars:
    ansible_connection: docker
    ansible_user: root
    ansible_become: true
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_private_key_file: /tmp/certs/ssh_priv.pem

    ssl_enabled: true
    ssl_mutual_auth_enabled: true
    
    rbac_enabled: true

    mds_super_user: mds
    mds_super_user_password: mds

    kafka_broker_ldap_user: kafka_broker
    kafka_broker_ldap_password: kafka_broker
    schema_registry_ldap_user: schema_registry
    schema_registry_ldap_password: schema_registry
    kafka_connect_ldap_user: connect_worker
    kafka_connect_ldap_password: connect_worker
    ksql_ldap_user: ksql
    ksql_ldap_password: ksql
    kafka_rest_ldap_user: rest_proxy
    kafka_rest_ldap_password: rest_proxy
    control_center_ldap_user: control_center
    control_center_ldap_password: control_center

zookeeper:
  hosts:
    zookeeper1:
      zookeeper_id: 1

kafka_broker:
  hosts:
    broker1:
      broker_id: 1
    broker2:
      broker_id: 2
    broker3:
      broker_id: 3
  vars:
    kafka_broker_custom_properties:
      ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
      ldap.com.sun.jndi.ldap.read.timeout: 3000
      ldap.java.naming.provider.url: ldap://openldap:389
      ldap.java.naming.security.principal: cn=admin,dc=confluentdemo,dc=io
      ldap.java.naming.security.credentials: admin
      ldap.java.naming.security.authentication: simple
      ldap.search.mode: GROUPS
      ldap.user.search.base: ou=users,dc=confluentdemo,dc=io
      ldap.group.search.base: ou=groups,dc=confluentdemo,dc=io
      ldap.group.object.class: posixGroup
      ldap.user.name.attribute: uid
      ldap.group.name.attribute: cn
      ldap.group.member.attribute.pattern: cn=(.*),ou=users,dc=confluentdemo,dc=io
      ldap.user.object.class: inetOrgPerson

schema_registry:
  hosts:
    schema-registry:2240:

kafka_rest:
  hosts:
    rest-proxy:

ksql:
  hosts:
    ksql-server:

kafka_connect:
  hosts:
    connect:

control_center:
  hosts:
    control-center:

